# Generated by Django 3.0 on 2023-08-05 02:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cid', models.CharField(default='', max_length=10)),
                ('gndr', models.CharField(choices=[('0', '---Select Gender---'), ('1', 'Female'), ('2', 'Male')], default='0', max_length=10)),
                ('role', models.CharField(choices=[('0', 'User'), ('1', 'Manager'), ('2', 'Guest')], default='0', max_length=10)),
                ('mbl', models.CharField(default='', max_length=10)),
                ('adrs', models.CharField(default='', max_length=200)),
                ('pfimag', models.ImageField(default='prof.png', upload_to='Profiles/')),
                ('dob', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MgrProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mgrdesg', models.CharField(max_length=200)),
                ('mgrexpr', models.IntegerField()),
                ('mstatus', models.BooleanField(default=False)),
                ('mloc', models.CharField(choices=[('sl', '---Select location---'), ('h', 'Hyderabad'), ('g', 'Guntur'), ('c', 'Chennai'), ('b', 'Banglore'), ('m', 'Mumbai'), ('d', 'Delhi')], default='sl', max_length=15)),
                ('mgr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GstProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gloc', models.CharField(choices=[('sl', '---Select location---'), ('h', 'Hyderabad'), ('g', 'Guntur'), ('c', 'Chennai'), ('b', 'Banglore'), ('m', 'Mumbai'), ('d', 'Delhi')], default='sl', max_length=15)),
                ('gstatus', models.BooleanField(default=False)),
                ('gst', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rbstatus', models.CharField(choices=[('p', 'Pending'), ('a', 'Approved'), ('d', 'Declined')], default='p', max_length=10)),
                ('rbloc', models.CharField(choices=[('sl', '---Select location---'), ('h', 'Hyderabad'), ('g', 'Guntur'), ('c', 'Chennai'), ('b', 'Banglore'), ('m', 'Mumbai'), ('d', 'Delhi')], default='sl', max_length=15)),
                ('rbtype', models.CharField(choices=[('0', '---Select Room Type--'), ('1', '1-Adult/Room'), ('2', '2-Adults/Room')], default='0', max_length=10)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
                ('apldate', models.DateField(auto_now_add=True)),
                ('mgdesc', models.CharField(max_length=200)),
                ('idproof', models.CharField(choices=[('ip', '---Select Id Proof Type---'), ('a', 'Aadhar Card'), ('p', 'PAN Card'), ('l', 'Licence'), ('v', 'Voter Card'), ('g', 'Other Government Certificate')], default='ip', max_length=15)),
                ('idatch', models.FileField(upload_to='Attachments/')),
                ('payatch', models.FileField(blank=True, null=True, upload_to='Attachments/')),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
